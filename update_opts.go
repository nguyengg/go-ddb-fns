package ddbfns

import (
	"github.com/aws/aws-sdk-go-v2/feature/dynamodb/expression"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
)

// UpdateOpts customises [Fns.Update] operations per each invocation.
type UpdateOpts struct {
	// DisableOptimisticLocking, if true, will skip all logic concerning version attribute.
	DisableOptimisticLocking bool
	// DisableAutoGeneratedTimestamps, if true, will skip all logic concerning timestamp attributes.
	DisableAutoGeneratedTimestamps bool

	// TableName modifies the [dynamodb.UpdateItemInput.TableName]
	TableName *string
	// ReturnConsumedCapacity modifies the [dynamodb.UpdateItemInput.ReturnConsumedCapacity]
	ReturnConsumedCapacity types.ReturnConsumedCapacity
	// ReturnItemCollectionMetrics modifies the [dynamodb.UpdateItemInput.ReturnItemCollectionMetrics]
	ReturnItemCollectionMetrics types.ReturnItemCollectionMetrics
	// ReturnValues modifies the [dynamodb.UpdateItemInput.ReturnValues]
	ReturnValues types.ReturnValue
	// ReturnValuesOnConditionCheckFailure modifies the [dynamodb.UpdateItemInput.ReturnValuesOnConditionCheckFailure].
	ReturnValuesOnConditionCheckFailure types.ReturnValuesOnConditionCheckFailure

	update    expression.UpdateBuilder
	condition expression.ConditionBuilder
	out       interface{}
}

// WithTableName overrides [UpdateOpts.TableName].
func (o *UpdateOpts) WithTableName(tableName string) *UpdateOpts {
	o.TableName = &tableName
	return o
}

// WithReturnValues overrides [UpdateOpts.ReturnValues].
func (o *UpdateOpts) WithReturnValues(returnValues types.ReturnValue) *UpdateOpts {
	o.ReturnValues = returnValues
	return o
}

// WithReturnValuesOnConditionCheckFailure overrides [UpdateOpts.ReturnValuesOnConditionCheckFailure].
func (o *UpdateOpts) WithReturnValuesOnConditionCheckFailure(returnValuesOnConditionCheckFailure types.ReturnValuesOnConditionCheckFailure) *UpdateOpts {
	o.ReturnValuesOnConditionCheckFailure = returnValuesOnConditionCheckFailure
	return o
}

// Decode will decode the [dynamodb.UpdateItemOutput.Attributes] into the given struct pointer.
//
// This opt is only used by DoUpdate to avoid having to manually unmarshal the returned item from DynamoDB.
// Unmarshalling error will be returned to caller. If the returned item is empty, unmarshalling will not happen.
//
// Should be used with WithReturnValues or WithReturnValuesOnConditionCheckFailure.
func (o *UpdateOpts) Decode(out interface{}) *UpdateOpts {
	o.out = out
	return o
}

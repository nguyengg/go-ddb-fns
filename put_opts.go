package ddbfns

import (
	"github.com/aws/aws-sdk-go-v2/feature/dynamodb/expression"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
)

// PutOpts customises [Fns.Put] operations per each invocation.
type PutOpts struct {
	// DisableOptimisticLocking, if true, will skip all logic concerning version attribute.
	DisableOptimisticLocking bool
	// DisableAutoGeneratedTimestamps, if true, will skip all logic concerning timestamp attributes.
	DisableAutoGeneratedTimestamps bool

	// TableName modifies the [dynamodb.PutItemInput.TableName]
	TableName *string
	// ReturnConsumedCapacity modifies the [dynamodb.PutItemInput.ReturnConsumedCapacity]
	ReturnConsumedCapacity types.ReturnConsumedCapacity
	// ReturnItemCollectionMetrics modifies the [dynamodb.PutItemInput.ReturnItemCollectionMetrics]
	ReturnItemCollectionMetrics types.ReturnItemCollectionMetrics
	// ReturnValues modifies the [dynamodb.PutItemInput.ReturnValues]
	ReturnValues types.ReturnValue
	// ReturnValuesOnConditionCheckFailure modifies the [dynamodb.PutItemInput.ReturnValuesOnConditionCheckFailure].
	ReturnValuesOnConditionCheckFailure types.ReturnValuesOnConditionCheckFailure

	condition expression.ConditionBuilder
	out       interface{}
}

// Decode will decode the [dynamodb.PutItemOutput.Attributes] into the given struct pointer.
//
// This opt is only used by DoPut to avoid having to manually unmarshal the returned item from DynamoDB.
// Unmarshalling error will be returned to caller. If the returned item is empty, unmarshalling will not happen.
//
// Should be used with WithReturnValues or WithReturnValuesOnConditionCheckFailure.
func (o *PutOpts) Decode(out interface{}) *PutOpts {
	o.out = out
	return o
}

// WithTableName overrides [PutOpts.TableName].
func (o *PutOpts) WithTableName(tableName string) *PutOpts {
	o.TableName = &tableName
	return o
}

// WithReturnValues overrides [PutOpts.ReturnValues].
func (o *PutOpts) WithReturnValues(returnValues types.ReturnValue) *PutOpts {
	o.ReturnValues = returnValues
	return o
}

// WithReturnValuesOnConditionCheckFailure overrides [PutOpts.ReturnValuesOnConditionCheckFailure].
func (o *PutOpts) WithReturnValuesOnConditionCheckFailure(returnValuesOnConditionCheckFailure types.ReturnValuesOnConditionCheckFailure) *PutOpts {
	o.ReturnValuesOnConditionCheckFailure = returnValuesOnConditionCheckFailure
	return o
}

// And adds an expression.And to the condition expression.
func (o *PutOpts) And(right expression.ConditionBuilder, other ...expression.ConditionBuilder) *PutOpts {
	if o.condition.IsSet() {
		o.condition = o.condition.And(right, other...)
		return o
	}

	switch len(other) {
	case 0:
		o.condition = right
	case 1:
		o.condition = right.And(other[0])
	default:
		o.condition = right.And(other[0], other[1:]...)
	}
	return o
}

// Or adds an expression.And to the condition expression.
func (o *PutOpts) Or(right expression.ConditionBuilder, other ...expression.ConditionBuilder) *PutOpts {
	if o.condition.IsSet() {
		o.condition = o.condition.Or(right, other...)
		return o
	}

	switch len(other) {
	case 0:
		o.condition = right
	case 1:
		o.condition = right.Or(other[0])
	default:
		o.condition = right.Or(other[0], other[1:]...)
	}
	return o
}
